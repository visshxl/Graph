https://www.geeksforgeeks.org/problems/topological-sort/1
class Solution{
	public:
	void dfs(int node, int vis[], vector<int> adj[],stack<int>& st){
	    vis[node]=1;
	    for(auto it:adj[node]){
	        if(!vis[it]){
	            dfs(it, vis, adj, st);
	        }
	    }
	   // with dfs we will push the last reacheable element to the st
	    st.push(node);
	}
	
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    vector<int> ans;
	    stack<int> st;
	    int vis[V]={0};
	    for(int i=0; i<V; i++){
	        if(!vis[i]){
	            dfs(i, vis, adj, st);
	        }
	    }
	    while(!st.empty()){
	        ans.push_back(st.top());
	        st.pop();
	    }
	    return ans;
	}
};
